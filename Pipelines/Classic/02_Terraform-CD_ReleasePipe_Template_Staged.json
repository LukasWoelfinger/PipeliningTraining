{
    "source": 2,
    "revision": 6,
    "description": null,
    "createdBy": {
        "displayName": "Mr DevOps",
        "url": "https://spsprodweu1.vssps.visualstudio.com/A8be927aa-ff58-4dae-aab4-ba8dc1dfa084/_apis/Identities/5d12063d-203a-42de-8275-f625787be8a5",
        "_links": {
            "avatar": {
                "href": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
            }
        },
        "id": "5d12063d-203a-42de-8275-f625787be8a5",
        "uniqueName": "ab@c.com",
        "imageUrl": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx",
        "descriptor": "aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
    },
    "createdOn": "2021-06-10T10:52:23.980Z",
    "modifiedBy": {
        "displayName": "Mr DevOps",
        "url": "https://spsprodweu1.vssps.visualstudio.com/A8be927aa-ff58-4dae-aab4-ba8dc1dfa084/_apis/Identities/5d12063d-203a-42de-8275-f625787be8a5",
        "_links": {
            "avatar": {
                "href": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
            }
        },
        "id": "5d12063d-203a-42de-8275-f625787be8a5",
        "uniqueName": "ab@c.com",
        "imageUrl": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx",
        "descriptor": "aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
    },
    "modifiedOn": "2021-06-11T10:42:46.147Z",
    "isDeleted": false,
    "lastRelease": {
        "id": 22,
        "name": "Release-3",
        "artifacts": [],
        "_links": {},
        "description": "",
        "releaseDefinition": {
            "id": 16,
            "projectReference": null,
            "_links": {}
        },
        "createdOn": "2021-06-11T10:43:05.420Z",
        "createdBy": {
            "displayName": "Mr DevOps",
            "url": "https://spsprodweu1.vssps.visualstudio.com/A8be927aa-ff58-4dae-aab4-ba8dc1dfa084/_apis/Identities/5d12063d-203a-42de-8275-f625787be8a5",
            "_links": {
                "avatar": {
                    "href": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
                }
            },
            "id": "5d12063d-203a-42de-8275-f625787be8a5",
            "uniqueName": "ab@c.com",
            "imageUrl": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx",
            "descriptor": "aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
        }
    },
    "variables": {
        "tf_applicationname": {
            "value": "lwpulterraformweb"
        },
        "appserviceplan": {
            "value": "PULTerraformplan",
            "allowOverride": true
        },
        "location": {
            "value": "westeurope"
        },
        "tf_storagekey": {
            "value": "PipelineWillGetThisValueRuntime"
        },
        "subscriptionid": {
            "value": "38820533-3004-415d-a57a-910d2b6d6097"
        },
        "tf_storageaccount": {
            "value": "YourAzureStorage"
        },
        "tf_storagecontainer": {
            "value": "terraform"
        },
        "tf_rgstorage": {
            "value": "Storage"
        }
    },
    "variableGroups": [],
    "environments": [
        {
            "id": 16,
            "name": "Dev",
            "rank": 1,
            "owner": {
                "displayName": "Mr DevOps",
                "url": "https://spsprodweu1.vssps.visualstudio.com/A8be927aa-ff58-4dae-aab4-ba8dc1dfa084/_apis/Identities/5d12063d-203a-42de-8275-f625787be8a5",
                "_links": {
                    "avatar": {
                        "href": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
                    }
                },
                "id": "5d12063d-203a-42de-8275-f625787be8a5",
                "uniqueName": "ab@c.com",
                "imageUrl": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx",
                "descriptor": "aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
            },
            "variables": {
                "environmentname": {
                    "value": "DEV"
                }
            },
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 46
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 1
                }
            },
            "deployStep": {
                "id": 47
            },
            "postDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 48
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 2
                }
            },
            "deployPhases": [
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": 0
                        },
                        "agentSpecification": {
                            "identifier": "ubuntu-20.04"
                        },
                        "skipArtifactsDownload": false,
                        "artifactsDownloadInput": {
                            "downloadInputs": [
                                {
                                    "alias": "_Terraform-CI",
                                    "artifactType": "Build",
                                    "artifactDownloadMode": "All",
                                    "artifactItems": []
                                }
                            ]
                        },
                        "queueId": 74,
                        "demands": [],
                        "enableAccessToken": false,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 1,
                    "phaseType": 1,
                    "name": "Agent job",
                    "refName": null,
                    "workflowTasks": [
                        {
                            "environment": {
                                "AZURE_DEVOPS_CLI_PAT": "$(System.AccessToken)"
                            },
                            "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                            "version": "2.*",
                            "name": "Azure CLI to deploy Terraform state storage - if required",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceNameARM": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "scriptType": "pscore",
                                "scriptLocation": "inlineScript",
                                "scriptPath": "",
                                "inlineScript": "# Create Azure resource group for Terraform state storage\naz group create --location $(location) --name $(tf_rgstorage)\n\n# Create storage account\naz storage account create --name $(tf_storageaccount) --resource-group $(tf_rgstorage) --location $(location) --sku Standard_LRS\n\n# Create storage container\naz storage container create --name $(tf_storagecontainer) --account-name $(tf_storageaccount)\n\naz storage account keys list -g $(tf_rgstorage) -n $(tf_storageaccount)\n\n",
                                "scriptArguments": "",
                                "powerShellErrorActionPreference": "stop",
                                "addSpnToEnvironment": "false",
                                "useGlobalConfig": "false",
                                "cwd": "",
                                "failOnStandardError": "false",
                                "powerShellIgnoreLASTEXITCODE": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                            "version": "5.*",
                            "name": "Azure PowerShell script to get the storage key",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "ConnectedServiceNameARM": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "ScriptType": "InlineScript",
                                "ScriptPath": "",
                                "Inline": "# Using this script we will fetch storage key which is required in terraform file to authenticate backend storage account\n\n$key=(Get-AzStorageAccountKey -ResourceGroupName $(tf_rgstorage) -AccountName $(tf_storageaccount)).Value[0]\n\nWrite-Host \"##vso[task.setvariable variable=tf_storagekey]$key\"",
                                "ScriptArguments": "",
                                "errorActionPreference": "stop",
                                "FailOnStandardError": "false",
                                "TargetAzurePs": "LatestVersion",
                                "CustomTargetAzurePs": "",
                                "pwsh": "false",
                                "workingDirectory": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                            "version": "3.*",
                            "name": "Replace tokens in terraform file",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "rootDirectory": "",
                                "targetFiles": "**/*.tf",
                                "encoding": "auto",
                                "writeBOM": "true",
                                "escapeType": "none",
                                "escapeChar": "",
                                "charsToEscape": "",
                                "verbosity": "normal",
                                "actionOnMissing": "warn",
                                "keepToken": "false",
                                "tokenPrefix": "__",
                                "tokenSuffix": "__",
                                "useLegacyPattern": "false",
                                "emptyValue": "(empty)",
                                "defaultValue": "",
                                "enableTransforms": "false",
                                "transformPrefix": "(",
                                "transformSuffix": ")",
                                "variableFiles": "",
                                "variableSeparator": ".",
                                "enableTelemetry": "true"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                            "version": "0.*",
                            "name": "Install Terraform 0.15.5",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "terraformVersion": "0.15.5"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                            "version": "2.*",
                            "name": "Terraform : init",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "provider": "azurerm",
                                "command": "init",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform/",
                                "commandOptions": "",
                                "environmentServiceNameAzureRM": "",
                                "environmentServiceNameAWS": "",
                                "environmentServiceNameGCP": "",
                                "backendServiceArm": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "backendAzureRmResourceGroupName": "$(tf_rgstorage)",
                                "backendAzureRmStorageAccountName": "$(tf_storageaccount) ",
                                "backendAzureRmContainerName": "$(tf_storagecontainer)",
                                "backendAzureRmKey": "$(tf_applicationname)-$(tf_environmentname)-terraform.tfstate",
                                "backendServiceAWS": "",
                                "backendAWSBucketName": "",
                                "backendAWSKey": "",
                                "backendServiceGCP": "",
                                "backendGCPBucketName": "",
                                "backendGCPPrefix": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                            "version": "2.*",
                            "name": "Terraform : plan",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "provider": "azurerm",
                                "command": "plan",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform/",
                                "commandOptions": "",
                                "environmentServiceNameAzureRM": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "environmentServiceNameAWS": "",
                                "environmentServiceNameGCP": "",
                                "backendServiceArm": "",
                                "backendAzureRmResourceGroupName": "$(tf_rgstorage)",
                                "backendAzureRmStorageAccountName": "$(tf_storageaccount) ",
                                "backendAzureRmContainerName": "terraform",
                                "backendAzureRmKey": "$(tf_storagekey)",
                                "backendServiceAWS": "",
                                "backendAWSBucketName": "",
                                "backendAWSKey": "",
                                "backendServiceGCP": "",
                                "backendGCPBucketName": "",
                                "backendGCPPrefix": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                            "version": "2.*",
                            "name": "Terraform : apply -auto-approve",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "provider": "azurerm",
                                "command": "apply",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform/",
                                "commandOptions": "-auto-approve",
                                "environmentServiceNameAzureRM": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "environmentServiceNameAWS": "",
                                "environmentServiceNameGCP": "",
                                "backendServiceArm": "",
                                "backendAzureRmResourceGroupName": "$(tf_rgstorage)",
                                "backendAzureRmStorageAccountName": "$(tf_storageaccount) ",
                                "backendAzureRmContainerName": "terraform",
                                "backendAzureRmKey": "$(tf_storagekey)",
                                "backendServiceAWS": "",
                                "backendAWSBucketName": "",
                                "backendAWSKey": "",
                                "backendServiceGCP": "",
                                "backendGCPBucketName": "",
                                "backendGCPPrefix": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
                            "version": "4.*",
                            "name": "Azure App Service Deploy: app-$(tf_applicationname)-$(tf_environmentname)",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "ConnectionType": "AzureRM",
                                "ConnectedServiceName": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "PublishProfilePath": "$(System.DefaultWorkingDirectory)/**/*.pubxml",
                                "PublishProfilePassword": "",
                                "WebAppKind": "app",
                                "WebAppName": "app-$(tf_applicationname)-$(tf_environmentname)",
                                "DeployToSlotOrASEFlag": "false",
                                "ResourceGroupName": "",
                                "SlotName": "production",
                                "DockerNamespace": "",
                                "DockerRepository": "",
                                "DockerImageTag": "",
                                "VirtualApplication": "",
                                "Package": "$(System.DefaultWorkingDirectory)/**/*.zip",
                                "RuntimeStack": "",
                                "RuntimeStackFunction": "",
                                "StartupCommand": "",
                                "ScriptType": "",
                                "InlineScript": ":: You can provide your deployment commands here. One command per line.",
                                "ScriptPath": "",
                                "WebConfigParameters": "",
                                "AppSettings": "",
                                "ConfigurationSettings": "",
                                "UseWebDeploy": "false",
                                "DeploymentType": "webDeploy",
                                "TakeAppOfflineFlag": "false",
                                "SetParametersFile": "",
                                "RemoveAdditionalFilesFlag": "false",
                                "ExcludeFilesFromAppDataFlag": "false",
                                "AdditionalArguments": "",
                                "RenameFilesFlag": "false",
                                "XmlTransformation": "false",
                                "XmlVariableSubstitution": "false",
                                "JSONFiles": ""
                            }
                        }
                    ]
                }
            ],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true,
                "badgeEnabled": false,
                "autoLinkWorkItems": false,
                "pullRequestDeploymentEnabled": false
            },
            "demands": [],
            "conditions": [
                {
                    "name": "ReleaseStarted",
                    "conditionType": 1,
                    "value": ""
                }
            ],
            "executionPolicy": {
                "concurrencyCount": 1,
                "queueDepthCount": 0
            },
            "schedules": [],
            "currentRelease": {
                "id": 22,
                "url": "https://vsrm.dev.azure.com/YourDevOpsOrganization/39408b16-43ab-4726-97eb-d6f5cd212cf9/_apis/Release/releases/22",
                "_links": {}
            },
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {},
            "properties": {
                "LinkBoardsWorkItems": {
                    "$type": "System.String",
                    "$value": "False"
                }
            },
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "environmentTriggers": [],
            "badgeUrl": "https://vsrm.dev.azure.com/YourDevOpsOrganization/_apis/public/Release/badge/39408b16-43ab-4726-97eb-d6f5cd212cf9/16/16"
        },
        {
            "id": 17,
            "name": "Test",
            "rank": 2,
            "owner": {
                "displayName": "Mr DevOps",
                "url": "https://spsprodweu1.vssps.visualstudio.com/A8be927aa-ff58-4dae-aab4-ba8dc1dfa084/_apis/Identities/5d12063d-203a-42de-8275-f625787be8a5",
                "_links": {
                    "avatar": {
                        "href": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
                    }
                },
                "id": "5d12063d-203a-42de-8275-f625787be8a5",
                "uniqueName": "ab@c.com",
                "imageUrl": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx",
                "descriptor": "aad.OGE1MzIyMmYtNTQ0Mi03NWM5LWJlZDctZWU0ZjFlOTkzNjgx"
            },
            "variables": {
                "environmentname": {
                    "value": "Test"
                }
            },
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": false,
                        "isNotificationOn": false,
                        "approver": {
                            "displayName": "[Oltiva Lab AR Viewer]\\Project Administrators",
                            "url": "https://spsprodweu1.vssps.visualstudio.com/A8be927aa-ff58-4dae-aab4-ba8dc1dfa084/_apis/Identities/9e9a2d6c-d43a-4f89-a2fe-6ebcc8ea4948",
                            "_links": {
                                "avatar": {
                                    "href": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xMTAzMTM2ODktMzgwNTYxOTAxMS0yOTY3MjYyNzQ1LTM3MTQxODcyNDQtMC0wLTAtMC0x"
                                }
                            },
                            "id": "9e9a2d6c-d43a-4f89-a2fe-6ebcc8ea4948",
                            "uniqueName": "vstfs:///Classification/TeamProject/142e21af-ac6e-4f3e-98c8-757fe059b641\\Project Administrators",
                            "imageUrl": "https://dev.azure.com/YourDevOpsOrganization/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xMTAzMTM2ODktMzgwNTYxOTAxMS0yOTY3MjYyNzQ1LTM3MTQxODcyNDQtMC0wLTAtMC0x",
                            "isContainer": true,
                            "descriptor": "vssgp.Uy0xLTktMTU1MTM3NDI0NS0xMTAzMTM2ODktMzgwNTYxOTAxMS0yOTY3MjYyNzQ1LTM3MTQxODcyNDQtMC0wLTAtMC0x"
                        },
                        "id": 49
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": 0,
                    "releaseCreatorCanBeApprover": true,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 129600,
                    "executionOrder": 1
                }
            },
            "deployStep": {
                "id": 50
            },
            "postDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 51
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 2
                }
            },
            "deployPhases": [
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": 0
                        },
                        "agentSpecification": {
                            "identifier": "vs2017-win2016"
                        },
                        "skipArtifactsDownload": false,
                        "artifactsDownloadInput": {
                            "downloadInputs": []
                        },
                        "queueId": 74,
                        "demands": [],
                        "enableAccessToken": false,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 1,
                    "phaseType": 1,
                    "name": "Agent job",
                    "refName": null,
                    "workflowTasks": [
                        {
                            "environment": {
                                "AZURE_DEVOPS_CLI_PAT": "$(System.AccessToken)"
                            },
                            "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                            "version": "2.*",
                            "name": "Azure CLI ",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceNameARM": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "scriptType": "pscore",
                                "scriptLocation": "inlineScript",
                                "scriptPath": "",
                                "inlineScript": "# Create Azure resource group for Terraform state storage\naz group create --location $(location) --name $(tf_rgstorage)\n\n# Create storage account\naz storage account create --name $(tf_storageaccount) --resource-group $(tf_rgstorage) --location $(location) --sku Standard_LRS\n\n# Create storage container\naz storage container create --name $(tf_storagecontainer) --account-name $(tf_storageaccount)\n\naz storage account keys list -g $(tf_rgstorage) -n $(tf_storageaccount)\n\n",
                                "scriptArguments": "",
                                "powerShellErrorActionPreference": "stop",
                                "addSpnToEnvironment": "false",
                                "useGlobalConfig": "false",
                                "cwd": "",
                                "failOnStandardError": "false",
                                "powerShellIgnoreLASTEXITCODE": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                            "version": "5.*",
                            "name": "Azure PowerShell script: InlineScript",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "ConnectedServiceNameARM": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "ScriptType": "InlineScript",
                                "ScriptPath": "",
                                "Inline": "# Using this script we will fetch storage key which is required in terraform file to authenticate backend storage account\n\n$key=(Get-AzStorageAccountKey -ResourceGroupName $(tf_rgstorage) -AccountName $(tf_storageaccount)).Value[0]\n\nWrite-Host \"##vso[task.setvariable variable=tf_storagekey]$key\"",
                                "ScriptArguments": "",
                                "errorActionPreference": "stop",
                                "FailOnStandardError": "false",
                                "TargetAzurePs": "LatestVersion",
                                "CustomTargetAzurePs": "",
                                "pwsh": "false",
                                "workingDirectory": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                            "version": "3.*",
                            "name": "Replace tokens in **/*.tf",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "rootDirectory": "",
                                "targetFiles": "**/*.tf",
                                "encoding": "auto",
                                "writeBOM": "true",
                                "escapeType": "auto",
                                "escapeChar": "",
                                "charsToEscape": "",
                                "verbosity": "normal",
                                "actionOnMissing": "warn",
                                "keepToken": "false",
                                "tokenPrefix": "__",
                                "tokenSuffix": "__",
                                "useLegacyPattern": "false",
                                "emptyValue": "(empty)",
                                "defaultValue": "",
                                "enableTransforms": "false",
                                "transformPrefix": "(",
                                "transformSuffix": ")",
                                "variableFiles": "",
                                "variableSeparator": ".",
                                "enableTelemetry": "true"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                            "version": "0.*",
                            "name": "Install Terraform 0.15.5",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "terraformVersion": "0.15.5"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                            "version": "2.*",
                            "name": "Terraform : init",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "provider": "azurerm",
                                "command": "init",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform/",
                                "commandOptions": "",
                                "environmentServiceNameAzureRM": "",
                                "environmentServiceNameAWS": "",
                                "environmentServiceNameGCP": "",
                                "backendServiceArm": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "backendAzureRmResourceGroupName": "$(tf_rgstorage)",
                                "backendAzureRmStorageAccountName": "$(tf_storageaccount) ",
                                "backendAzureRmContainerName": "$(tf_storagecontainer)",
                                "backendAzureRmKey": "$(tf_applicationname)-$(tf_environmentname)-terraform.tfstate",
                                "backendServiceAWS": "",
                                "backendAWSBucketName": "",
                                "backendAWSKey": "",
                                "backendServiceGCP": "",
                                "backendGCPBucketName": "",
                                "backendGCPPrefix": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                            "version": "2.*",
                            "name": "Terraform : plan",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "provider": "azurerm",
                                "command": "plan",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform/",
                                "commandOptions": "",
                                "environmentServiceNameAzureRM": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "environmentServiceNameAWS": "",
                                "environmentServiceNameGCP": "",
                                "backendServiceArm": "",
                                "backendAzureRmResourceGroupName": "",
                                "backendAzureRmStorageAccountName": "",
                                "backendAzureRmContainerName": "",
                                "backendAzureRmKey": "",
                                "backendServiceAWS": "",
                                "backendAWSBucketName": "",
                                "backendAWSKey": "",
                                "backendServiceGCP": "",
                                "backendGCPBucketName": "",
                                "backendGCPPrefix": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                            "version": "2.*",
                            "name": "Terraform : apply",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "provider": "azurerm",
                                "command": "apply",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform/",
                                "commandOptions": "",
                                "environmentServiceNameAzureRM": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "environmentServiceNameAWS": "",
                                "environmentServiceNameGCP": "",
                                "backendServiceArm": "",
                                "backendAzureRmResourceGroupName": "",
                                "backendAzureRmStorageAccountName": "",
                                "backendAzureRmContainerName": "",
                                "backendAzureRmKey": "",
                                "backendServiceAWS": "",
                                "backendAWSBucketName": "",
                                "backendAWSKey": "",
                                "backendServiceGCP": "",
                                "backendGCPBucketName": "",
                                "backendGCPPrefix": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
                            "version": "4.*",
                            "name": "Azure App Service Deploy: app-$(tf_applicationname)-$(tf_environmentname)",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "ConnectionType": "AzureRM",
                                "ConnectedServiceName": "5e35ceaf-84fe-4eae-8ce0-a9dedc321c3b",
                                "PublishProfilePath": "$(System.DefaultWorkingDirectory)/**/*.pubxml",
                                "PublishProfilePassword": "",
                                "WebAppKind": "webAppLinux",
                                "WebAppName": "app-$(tf_applicationname)-$(tf_environmentname)",
                                "DeployToSlotOrASEFlag": "false",
                                "ResourceGroupName": "",
                                "SlotName": "production",
                                "DockerNamespace": "",
                                "DockerRepository": "",
                                "DockerImageTag": "",
                                "VirtualApplication": "",
                                "Package": "$(System.DefaultWorkingDirectory)/**/*.zip",
                                "RuntimeStack": "",
                                "RuntimeStackFunction": "",
                                "StartupCommand": "",
                                "ScriptType": "",
                                "InlineScript": ":: You can provide your deployment commands here. One command per line.",
                                "ScriptPath": "",
                                "WebConfigParameters": "",
                                "AppSettings": "",
                                "ConfigurationSettings": "",
                                "UseWebDeploy": "false",
                                "DeploymentType": "webDeploy",
                                "TakeAppOfflineFlag": "true",
                                "SetParametersFile": "",
                                "RemoveAdditionalFilesFlag": "false",
                                "ExcludeFilesFromAppDataFlag": "true",
                                "AdditionalArguments": "-retryAttempts:6 -retryInterval:10000",
                                "RenameFilesFlag": "true",
                                "XmlTransformation": "false",
                                "XmlVariableSubstitution": "false",
                                "JSONFiles": ""
                            }
                        }
                    ]
                }
            ],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true,
                "badgeEnabled": false,
                "autoLinkWorkItems": false,
                "pullRequestDeploymentEnabled": false
            },
            "demands": [],
            "conditions": [
                {
                    "name": "Dev",
                    "conditionType": 2,
                    "value": "4"
                }
            ],
            "executionPolicy": {
                "concurrencyCount": 1,
                "queueDepthCount": 0
            },
            "schedules": [],
            "currentRelease": {
                "id": 22,
                "url": "https://vsrm.dev.azure.com/YourDevOpsOrganization/39408b16-43ab-4726-97eb-d6f5cd212cf9/_apis/Release/releases/22",
                "_links": {}
            },
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {},
            "properties": {
                "LinkBoardsWorkItems": {
                    "$type": "System.String",
                    "$value": "False"
                },
                "BoardsEnvironmentType": {
                    "$type": "System.String",
                    "$value": "unmapped"
                }
            },
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "environmentTriggers": [],
            "badgeUrl": "https://vsrm.dev.azure.com/YourDevOpsOrganization/_apis/public/Release/badge/39408b16-43ab-4726-97eb-d6f5cd212cf9/16/17"
        }
    ],
    "artifacts": [
        {
            "sourceId": "39408b16-43ab-4726-97eb-d6f5cd212cf9:12",
            "type": "Build",
            "alias": "_Terraform-CI",
            "definitionReference": {
                "artifactSourceDefinitionUrl": {
                    "id": "https://dev.azure.com/YourDevOpsOrganization/_permalink/_build/index?collectionId=96e4353b-4126-48cb-a6b3-327503f2c7c3&projectId=39408b16-43ab-4726-97eb-d6f5cd212cf9&definitionId=12",
                    "name": ""
                },
                "defaultVersionBranch": {
                    "id": "",
                    "name": ""
                },
                "defaultVersionSpecific": {
                    "id": "",
                    "name": ""
                },
                "defaultVersionTags": {
                    "id": "",
                    "name": ""
                },
                "defaultVersionType": {
                    "id": "selectDuringReleaseCreationType",
                    "name": "Specify at the time of release creation"
                },
                "definition": {
                    "id": "12",
                    "name": "Terraform-CI"
                },
                "definitions": {
                    "id": "",
                    "name": ""
                },
                "IsMultiDefinitionType": {
                    "id": "False",
                    "name": "False"
                },
                "project": {
                    "id": "39408b16-43ab-4726-97eb-d6f5cd212cf9",
                    "name": "Terraform-20210601"
                }
            },
            "isPrimary": true,
            "isRetained": false
        }
    ],
    "triggers": [],
    "releaseNameFormat": "Release-$(rev:r)",
    "tags": [],
    "properties": {
        "DefinitionCreationSource": {
            "$type": "System.String",
            "$value": "ReleaseImport"
        },
        "IntegrateJiraWorkItems": {
            "$type": "System.String",
            "$value": "false"
        },
        "IntegrateBoardsWorkItems": {
            "$type": "System.String",
            "$value": "False"
        }
    },
    "id": 16,
    "name": "Terraform-CD_export - Copy",
    "path": "\\",
    "projectReference": null,
    "url": "https://vsrm.dev.azure.com/YourDevOpsOrganization/39408b16-43ab-4726-97eb-d6f5cd212cf9/_apis/Release/definitions/16",
    "_links": {
        "self": {
            "href": "https://vsrm.dev.azure.com/YourDevOpsOrganization/39408b16-43ab-4726-97eb-d6f5cd212cf9/_apis/Release/definitions/16"
        },
        "web": {
            "href": "https://dev.azure.com/YourDevOpsOrganization/39408b16-43ab-4726-97eb-d6f5cd212cf9/_release?definitionId=16"
        }
    }
}